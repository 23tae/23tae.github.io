<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://23tae.github.io/</id><title>Justnote</title><subtitle>배운 내용을 기록하는 곳</subtitle> <updated>2022-07-30T22:08:56+09:00</updated> <author> <name>Taehoon</name> <uri>https://23tae.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://23tae.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://23tae.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Taehoon </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[운영 체제] 04. Thread &amp; Concurrency</title><link href="https://23tae.github.io/posts/os04/" rel="alternate" type="text/html" title="[운영 체제] 04. Thread &amp; Concurrency" /><published>2022-07-28T00:00:00+09:00</published> <updated>2022-07-30T22:08:28+09:00</updated> <id>https://23tae.github.io/posts/os04/</id> <content src="https://23tae.github.io/posts/os04/" /> <author> <name>Taehoon</name> </author> <category term="Computer Science" /> <category term="Operating System" /> <summary> Overview 스레드 (thread) 가벼운 프로세스 CPU 활용의 기본 단위 스레드 ID, 프로그램 카운터, 레지스터 세트, 스택으로 구성됨 앞에서는 프로세스가 한 개의 스레드로 실행(싱글스레딩)된다고 가정했음 하지만 실제로 프로세스는 여러 개의 스레드로 실행(멀티스레딩)될 수 있음 [싱글스레딩과 멀티스레딩] 멀티스레딩의 등장 배경 아래와 같은 클라이언트-서버 시스템(웹서버 등)을 가정하면, 기존의 싱글스레딩은 서버가 클라이언트로부터 request를 수신한 뒤에 해당 request를 처리하는 동안 기존의 클라이언트로부터 수신하던 작업은 잠시 멈추게 됨. 하지만 멀티스레딩을 사용하면 request를 받고(1번), 새로 생성한 스레드에 request 처리 작업을 맡긴(2... </summary> </entry> <entry><title>[운영 체제] 03. Processes</title><link href="https://23tae.github.io/posts/os03/" rel="alternate" type="text/html" title="[운영 체제] 03. Processes" /><published>2022-07-26T12:30:00+09:00</published> <updated>2022-07-30T22:08:28+09:00</updated> <id>https://23tae.github.io/posts/os03/</id> <content src="https://23tae.github.io/posts/os03/" /> <author> <name>Taehoon</name> </author> <category term="Computer Science" /> <category term="Operating System" /> <summary> Process Concept 프로세스란? 프로세스는 실행되는 프로그램을 의미함 프로세스는 OS에서의 작업 단위 프로세스가 작업을 마치기 위해서는 다음과 같은 리소스를 필요로 함 CPU 타임 메모리 파일 I/O 디바이스 OS가 하는 가장 중요한 일이 프로세스를 관리하는 것 프로세스의 메모리 구성 Text 영역 실행가능한 코드 Data 영역 전역 변수 Heap 영역 동적할당된 메모리 Stack 영역 함수를 호출한 경우 함수 매개변수, 리턴 주소(함수 수행이 끝난 뒤 실행... </summary> </entry> <entry><title>Push_swap ① Subject</title><link href="https://23tae.github.io/posts/push_swap1/" rel="alternate" type="text/html" title="Push_swap ① Subject" /><published>2022-07-21T13:00:00+09:00</published> <updated>2022-07-30T00:20:44+09:00</updated> <id>https://23tae.github.io/posts/push_swap1/</id> <content src="https://23tae.github.io/posts/push_swap1/" /> <author> <name>Taehoon</name> </author> <category term="42Seoul" /> <category term="Push_swap" /> <summary> Pdf Summary 이 프로젝트에서는 가능한 최소 작업 수를 사용하여 제한된 명령어 집합으로 스택의 데이터를 정렬할 수 있다. 이를 성공하기 위해서는 다양한 유형의 알고리즘을 조작하고 최적화된 데이터 정렬에 가장 적합한 솔루션을 선택해야 한다. Objectives 정렬 알고리즘을 작성하는 것은 개발자의 여정에서 매우 중요한 단계이다. 보통 이 때 복잡성(알고리즘 분석)의 개념을 처음 접하게 된다. 알고리즘 분석 : 알고리즘을 실행하는데 필요한 자원의 수를 결정하는 것 정렬 알고리즘과 그 복잡성은 취업 면접에서 논의되는 고전적인 질문 중 하나이다. 이러한 개념은 언젠가는 직면해야 하기 때문에 지금 그 개념을 살펴보는 것은 좋은 시기일 것이다. 이 프로젝트의 학습 목표는 정밀함, C의 ... </summary> </entry> <entry><title>[운영 체제] 02. Operating-System Structures</title><link href="https://23tae.github.io/posts/os02/" rel="alternate" type="text/html" title="[운영 체제] 02. Operating-System Structures" /><published>2022-07-20T23:00:00+09:00</published> <updated>2022-07-30T22:08:28+09:00</updated> <id>https://23tae.github.io/posts/os02/</id> <content src="https://23tae.github.io/posts/os02/" /> <author> <name>Taehoon</name> </author> <category term="Computer Science" /> <category term="Operating System" /> <summary> Operating System Services OS는 프로그램이 실행될 환경을 제공함 User interface Program execution I/O operation File-system manipulation Communications Error detection Resource allocation Logging Protection and security User and Operating-System Interface 유저 인터페이스 CLI (Command Line Interface) shell로도 알려져 있음. 예시 : sh, bash, csh, tcsh, zsh 등 GUI (Graphical ... </summary> </entry> <entry><title>[운영 체제] 01. Introduction</title><link href="https://23tae.github.io/posts/os01/" rel="alternate" type="text/html" title="[운영 체제] 01. Introduction" /><published>2022-07-20T20:00:00+09:00</published> <updated>2022-07-21T22:42:11+09:00</updated> <id>https://23tae.github.io/posts/os01/</id> <content src="https://23tae.github.io/posts/os01/" /> <author> <name>Taehoon</name> </author> <category term="Computer Science" /> <category term="Operating System" /> <summary> Operating System 운영 체제 컴퓨터의 하드웨어를 관리하는 소프트웨어 컴퓨터 상에서 항상 가동되는 하나의 프로그램 커널 시스템 프로그램 애플리케이션 프로그램 역할 애플리케이션 프로그램의 기반을 제공함 사용자와 하드웨어의 매개체 역할을 함 부팅 과정 컴퓨터의 전원이 켜짐 CPU가 ROM의 부트스트랩 프로그램을 실행함 이 프로그램이 하드디스크에서 OS를 찾아 메인메모리에 가져옴 컴퓨터 시스템의 구성 하드웨어 운영 체제 애플리케이션 프로그램 사용자 Computer System Organization 현대 컴퓨터의 구성 한개 이상의 CPU 버스를 통해 연결된 다수의 디바이스 ... </summary> </entry> </feed>
